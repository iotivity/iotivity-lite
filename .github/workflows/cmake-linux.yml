# Build on Linux with CMake and execute tests

name: CI-cmake building linux

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'master' }}

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      clang:
        description: "Compile using clang"
        required: false
        type: boolean
        default: false
      install_mbedtls:
        description: "Install mbedTLS and use it for the build"
        required: false
        type: boolean
        default: false
      install_tinycbor:
        description: "Install tinyCBOR and use it for the build"
        required: false
        type: boolean
        default: false

jobs:
  cmake_linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          # security off, cloud (ipv4+tcp), collection create on, push on, introspection IDD off
          - build_args: "-DOC_SECURITY_ENABLED=OFF -DOC_CLOUD_ENABLED=ON -DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_PUSH_ENABLED=ON -DOC_IDD_API_ENABLED=OFF"
    uses: ./.github/workflows/unit-test-with-cfg.yml
    with:
      build_args: -DOC_LOG_MAXIMUM_LOG_LEVEL=DEBUG -DOC_WKCORE_ENABLED=ON -DOC_SOFTWARE_UPDATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_PUSH_ENABLED=ON -DPLGD_DEV_TIME_ENABLED=ON -DOC_ETAG_ENABLED=ON ${{ matrix.build_args }}
      build_type: Debug
      clang: ${{ github.event_name == 'workflow_dispatch' && inputs.clang }}
      coverage: false
      install_mbedtls: ${{ github.event_name == 'workflow_dispatch' && inputs.install_mbedtls }}
      install_tinycbor: ${{ github.event_name == 'workflow_dispatch' && inputs.install_tinycbor }}
