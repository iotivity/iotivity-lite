# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Run plgd/hub/dps tests with dps_cloud_server

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'master' }}

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_type:
        description: "Type of the build"
        type: string
        default: "Debug"

jobs:
  plgd-hub-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: dps-cloud-server
            # same configuration as "plgd-dps-tests" in the SonarCloud scan job, skip for events that trigger both jobs
            skip: ${{ github.event_name != 'workflow_dispatch' }}
            build_args: ""
          - name: dps-cloud-server-asan
            build_args: "-DOC_ASAN_ENABLED=ON"
            docker_file: docker/apps/Dockerfile.dps-cloud-server
          - name: dps-cloud-server-tsan
            build_args: "-DOC_TSAN_ENABLED=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang"
            docker_file: docker/apps/Dockerfile.dps-cloud-server
          - name: dps-cloud-server-tsan
            build_args: "-DOC_UBSAN_ENABLED=ON"
            docker_file: docker/apps/Dockerfile.dps-cloud-server
          - name: dps-cloud-server-faketime-system-time
            args: --set-system-time
            build_args: "-DPLGD_DPS_FAKETIME_ENABLED=ON"
            docker_file: docker/apps/Dockerfile.dps-cloud-server-debug
          - name: dps-cloud-server-faketime-mbedtls-time
            build_args: "-DPLGD_DPS_FAKETIME_ENABLED=ON"
            docker_file: docker/apps/Dockerfile.dps-cloud-server-debug
    uses: ./.github/workflows/plgd-dps-test-with-cfg.yml
    with:
        args: ${{ matrix.args || '' }}
        build_args: -DOC_DEBUG_ENABLED=ON -DPLGD_DPS_MAXIMUM_LOG_LEVEL=TRACE -DPLGD_DPS_CLOUD_SERVER_DBG_ENABLED=ON ${{ matrix.build_args }}
        build_type: ${{ (github.event_name == 'workflow_dispatch' && inputs.build_type) || 'Debug' }}
        docker_file: ${{ matrix.docker_file || 'docker/apps/Dockerfile.dps-cloud-server-debug' }}
        skip: ${{ matrix.skip || false }}
