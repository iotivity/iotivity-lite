# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish docker images

on:
  push:
    branches:
      - master
    tags:
      - "*"

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: cloud-server
            file: docker/apps/Dockerfile.cloud-server
            args: "CLOUD=1 SECURE=1 CREATE=1 MNT=1 DEBUG=0 OSCORE=0 ASAN=0"
          - name: cloud-server-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            args: "CLOUD=1 SECURE=1 CREATE=1 MNT=1 DEBUG=1 OSCORE=0 ASAN=0"
          - name: cloud-server-discovery-resource-observable
            file: docker/apps/Dockerfile.cloud-server
            args: "CLOUD=1 SECURE=1 CREATE=1 MNT=1 DEBUG=0 OICRES_OBSERVABLE=1 OSCORE=0 ASAN=0"
          - name: cloud-server-discovery-resource-observable-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            args: "CLOUD=1 SECURE=1 CREATE=1 MNT=1 DEBUG=1 OICRES_OBSERVABLE=1 OSCORE=0 ASAN=0"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      - name: Build and push cloud-server docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          builder: ${{ steps.buildx.outputs.name }}
          file: ${{ matrix.file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_ARGS=${{ matrix.args }}
