# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Run plgd/hub tests with cloud_server

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TEST_CLOUD_SERVER_IMAGE: ghcr.io/plgd-dev/hub/test-cloud-server:latest

jobs:
  plgd-hub-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: cloud-server-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_OSCORE_ENABLED=OFF"
            type: Debug
          - name: cloud-server-debug-asan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_ASAN_ENABLED=ON"
            type: Debug
          - name: cloud-server-debug-tsan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_TSAN_ENABLED=ON"
            type: Debug

          - name: cloud-server-discovery-resource-observable-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_OSCORE_ENABLED=OFF"
            type: Debug
          - name: cloud-server-discovery-resource-observable-debug-asan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_ASAN_ENABLED=ON"
            type: Debug
          - name: cloud-server-discovery-resource-observable-debug-tsan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_TSAN_ENABLED=ON"
            type: Debug

          - name: cloud-server-rep-realloc-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF"
            type: Debug
          - name: cloud-server-rep-realloc-debug-asan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_ASAN_ENABLED=ON"
            type: Debug
          - name: cloud-server-rep-realloc-debug-tsan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_TSAN_ENABLED=ON"
            type: Debug

          - name: cloud-server-discovery-resource-observable-rep-realloc-debug
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF"
            type: Debug
          - name: cloud-server-discovery-resource-observable-rep-realloc-debug-asan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_ASAN_ENABLED=ON"
            type: Debug
          - name: cloud-server-discovery-resource-observable-rep-realloc-debug-tsan
            file: docker/apps/Dockerfile.cloud-server-debug
            tag: dbg
            args: "-DOC_COLLECTIONS_IF_CREATE_ENABLED=ON -DOC_MNT_ENABLED=ON -DOC_DEBUG_ENABLED=ON -DOC_DISCOVERY_RESOURCE_OBSERVABLE_ENABLED=ON -DOC_REPRESENTATION_REALLOC_ENCODING_ENABLED=ON -DOC_OSCORE_ENABLED=OFF -DOC_TSAN_ENABLED=ON"
            type: Debug

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Build cloud server docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          build-args: |
            BUILD_ARGS=${{ matrix.args }}
            BUILD_TYPE=${{ matrix.type }}
          file: ${{ matrix.file }}
          tags: ${{ matrix.tag }}

      - name: Pull plgd hub tests image
        run: docker pull ${{ env.TEST_CLOUD_SERVER_IMAGE }}

      - name: Run cloud server container
        run: docker run --privileged -d --network=host -v `pwd`/data:/tmp --name ${{ matrix.name }} ${{ matrix.tag }} devsim-`hostname`

      - name: Run plgd hub tests image
        run: docker run --rm --network=host ${{ env.TEST_CLOUD_SERVER_IMAGE }}

      - name: Collect cloud server logs when the test fails
        if: ${{ failure() }}
        run: cat `pwd`/data/0.log

      - name: Collect sanitizers cloud server logs when the test fails
        if: ${{ failure() }}
        run: |
          if ls `pwd`/data/0.asan.log* 1> /dev/null 2>&1; then \
            sudo cat `pwd`/data/0.asan.log*; \
          fi
          if ls `pwd`/data/0.tsan.log* 1> /dev/null 2>&1; then \
            sudo cat `pwd`/data/0.tsan.log*; \
          fi

      - name: Remove cloud server container
        run: docker rm -f ${{ matrix.name }}
