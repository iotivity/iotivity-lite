{
  "comments": [
    {
      "key": {
        "uuid": "c3d50e95_8f353c82",
        "filename": "patches/02_mbedtls_ocf-microsoft.patch",
        "patchSetId": 12
      },
      "lineNbr": 1341,
      "author": {
        "id": 313
      },
      "writtenOn": "2019-10-22T17:17:30Z",
      "side": 1,
      "message": "Sorry for what is probably a dumb question (I don\u0027t have a lot of practice reviewing patches so the formatting is hard to follow).  But I am surprised that this functionality is not also in the previous patch... seems like verify_top() is basic functionality needed in any version.  Any simple explanation why this is new in the 2.16 patch?",
      "revId": "2baeec6cc5ac9c1f30d10c6c9f5c77002b302354",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4abafefc_965bf578",
        "filename": "patches/02_mbedtls_ocf-microsoft.patch",
        "patchSetId": 12
      },
      "lineNbr": 1341,
      "author": {
        "id": 8401
      },
      "writtenOn": "2019-10-23T15:51:18Z",
      "side": 1,
      "message": "In recent mbedTLS version the verify_with_profile() routine is redone, verify_top() and verify_child() were removed. The update is nonobvious and need to be investigated to be merged properly, so I\u0027ve decided to keep the former code in case of enabled EXPANDED_SUBJECT_ALT_NAME_SUPPORT meanwhile.",
      "parentUuid": "c3d50e95_8f353c82",
      "revId": "2baeec6cc5ac9c1f30d10c6c9f5c77002b302354",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dae4468d_76d0208e",
        "filename": "patches/02_mbedtls_ocf-microsoft.patch",
        "patchSetId": 12
      },
      "lineNbr": 1341,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-23T16:19:37Z",
      "side": 1,
      "message": "Oleksii,\n\nDid you try testing the stack without re-adding this bit?\n\nThough mbedTLS has updated the flow, is there any reason why our code and usages wouldn\u0027t \ncontinue to work as before under their new scheme?\n\nI just worry about us deviating even further from the upstream, and if this change is something we can avoid, that would be great.",
      "parentUuid": "4abafefc_965bf578",
      "revId": "2baeec6cc5ac9c1f30d10c6c9f5c77002b302354",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    }
  ]
}