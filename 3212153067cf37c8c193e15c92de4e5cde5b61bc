{
  "comments": [
    {
      "key": {
        "uuid": "bf8dc139_a344c329",
        "filename": "swig/swig_interfaces/iotivity.swg",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T23:15:28Z",
      "side": 1,
      "message": "It seems that changing this to $1.ptr gets rid of many warnings of the form:\n\niotivity-lite-java/jni/oc_cloud_wrap.c:761:8: warning: address of \u0027result\u0027 will\n      always evaluate to \u0027true\u0027 [-Wpointer-bool-conversion]\n  if (\u0026result) {",
      "range": {
        "startLine": 121,
        "startChar": 6,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeabe510_b61f830d",
        "filename": "swig/swig_interfaces/iotivity.swg",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf8dc139_a344c329",
      "range": {
        "startLine": 121,
        "startChar": 6,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4b1be33_d73e7ba0",
        "filename": "swig/swig_interfaces/oc_api.i",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T23:15:28Z",
      "side": 1,
      "message": "Is this necessary? \n\nIt seems to generate a bunch of unused code leading to warnings.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 24
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa6cb4c7_25945697",
        "filename": "swig/swig_interfaces/oc_api.i",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "This is used to enable reading and writing the oc_client_cb_t.token[COAP_TOKEN_LEN] value.\n\nWe use 3 of the generated functions.  Unfortunately this does result in a bunch of unused code also being generated. So far I have not found a way to prevent the unused code warnings.",
      "parentUuid": "f4b1be33_d73e7ba0",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 24
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3935cb2c_75f665e4",
        "filename": "swig/swig_interfaces/oc_api.i",
        "patchSetId": 3
      },
      "lineNbr": 710,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T23:15:28Z",
      "side": 1,
      "message": "Can probably remove this? Seems to be superfluous.",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 38
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e050a37c_37e63347",
        "filename": "swig/swig_interfaces/oc_api.i",
        "patchSetId": 3
      },
      "lineNbr": 710,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3935cb2c_75f665e4",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 38
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d981f5_5e3217d8",
        "filename": "swig/swig_interfaces/oc_endpoint.i",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T23:15:28Z",
      "side": 1,
      "message": "Is this necessary? \n\nIt seems to generate a bunch of unused code leading to warnings.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 24
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "822c28c6_68de09b5",
        "filename": "swig/swig_interfaces/oc_endpoint.i",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "Once again this is used to read and write an array value in this case it is reading and writing\noc_ipv6_addr_t.address[16]\noc_ipv4_addr_t.address[4]\noc_le_addr_t.address[6]",
      "parentUuid": "24d981f5_5e3217d8",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 24
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a838912_5c508746",
        "filename": "swig/swig_interfaces/oc_endpoint.i",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T22:10:17Z",
      "side": 1,
      "message": "It looks like we don\u0027t free arg1 over here after throwing the exception. Could you check? \n\nBy the way, I\u0027d spotted this upon examining the generated code some days ago while chasing down OTGC issues. \n\nHave you guys checked all other instances where a sequence terminates prematurely to confirm that we\u0027re freeing strings (not sure if we allocate any other types of objects in the swig interfaces)",
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5002fc58_3f974faf",
        "filename": "swig/swig_interfaces/oc_endpoint.i",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "I double checked the output and I can just remove the \"return $null;\" and the code will do the proper cleanup. for arg1 as well as some other temporary code.\n\nGood catch.\n\nI have tried to catch any sequence that terminates prematurely.  It possible others have been missed but I will make a point of doing another pass through the code.",
      "parentUuid": "0a838912_5c508746",
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76f3c2_7aa0a000",
        "filename": "swig/swig_interfaces/oc_obt.i",
        "patchSetId": 3
      },
      "lineNbr": 425,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-10-31T23:15:28Z",
      "side": 1,
      "message": "Should this simply be made (char *)?\n\nIn the generated code, I see that it creates a char * for this argument, and because the existing directive casts to (const char *) and assigns to a char *, the compiler returns the warning:\n\niotivity-lite-java/jni/oc_obt_wrap.c:1245:10: warning: assigning to \u0027char *\u0027\n\n      from \u0027const char *\u0027 discards qualifiers\n\n      [-Wincompatible-pointer-types-discards-qualifiers]\n\n    arg2 \u003d (char const *)(*jenv)-\u003eGetStringUTFChars(jenv, jarg2, 0);",
      "range": {
        "startLine": 425,
        "startChar": 8,
        "endLine": 425,
        "endChar": 16
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cc1b4f8_fa5a92bd",
        "filename": "swig/swig_interfaces/oc_obt.i",
        "patchSetId": 3
      },
      "lineNbr": 425,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-01T01:22:42Z",
      "side": 1,
      "message": "I will change the value of const char* pin to char* pin and it will resolve the issue.",
      "parentUuid": "1a76f3c2_7aa0a000",
      "range": {
        "startLine": 425,
        "startChar": 8,
        "endLine": 425,
        "endChar": 16
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ba0c047_741ffe2f",
        "filename": "swig/swig_interfaces/oc_ri.i",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-02T01:03:19Z",
      "side": 1,
      "message": "Can we disable setters for oc_resource_s::types for e.g.?\nIn oc_api_wrap.c, I see a setter for this property which is an oc_string_array_t, and while the framework knows how to allocate and populate an oc_string_array_t from a String[], in this instance, I don\u0027t see that oc_string_array_t being bound to the \"types\" property in oc_resource_t. \n\nIs it a problem that we allow such an API in the Java layer? This feels kind of similar to that OCRole case.\n\nMore generally, it seems that SWIG automatically places setters in areas where they may not be truly usable in Java. So, we may want to comb through the SWIG interfaces to identify what shouldn\u0027t be exposed and disable them.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7083e6e_c4de7e89",
        "filename": "swig/swig_interfaces/oc_ri.i",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 4407
      },
      "writtenOn": "2019-11-04T17:34:13Z",
      "side": 1,
      "message": "SWIG by default generates getters and setters for all of the values in a struct unless specifically instructed not to generate them.  I will update this so the setters are not generated. It is as simple as marking the struct parameter as `%immutable` see line 32 above.\n\nI typically don\u0027t override the setter unless I know it should not be changed by the library user.",
      "parentUuid": "0ba0c047_741ffe2f",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 34
      },
      "revId": "3212153067cf37c8c193e15c92de4e5cde5b61bc",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    }
  ]
}