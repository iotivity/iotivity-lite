{
  "comments": [
    {
      "key": {
        "uuid": "089f896c_c4760b2f",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T02:25:08Z",
      "side": 1,
      "message": "These two objects need to be reset/cleared inside systemShutdown(), or else they keep growing across shutdown/init cycles of the stack. For e.g., following a shutdown/init deviceIndex is set to 1 (instead of 0) for the 1st logical device.\n\nThis was tricky to spot, but I caught it during some testing.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d54b66_498e0f6a",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 3653
      },
      "writtenOn": "2019-11-25T03:29:28Z",
      "side": 1,
      "message": "See https://gerrit.iotivity.org/gerrit/c/iotivity-lite/+/29967 on swig branch",
      "parentUuid": "089f896c_c4760b2f",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe5a22d_d7726b9b",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T20:07:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "47d54b66_498e0f6a",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "974f906b_9e528d6f",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T20:42:56Z",
      "side": 1,
      "message": "Regarding my comment here on the other commit, I was just considering other things that could\u0027ve gone wrong in the initialization callback (note that an implementation may choose to do other things besides init platform/device and factor the success/failure of those other functions into the return value from the initialization callback) thus resulting in a negative return value.\n\nIn the initialization code in api/oc_main.c, you\u0027ll see it calling oc_main_shutdown() (to clear up anything that was properly initialized until that point) when the initialization callback returns \u003c 0.\n\nIt was in that vein that I was thinking that a reset of state here was warranted.",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 41
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8088fbde_ddecf2ee",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T21:01:27Z",
      "side": 1,
      "message": "Does my comment above make sense?",
      "parentUuid": "974f906b_9e528d6f",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 41
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87480064_276eb131",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T20:07:02Z",
      "side": 1,
      "message": "Can you check if ret \u003e\u003d 0 here and place the lines 54, 55 above and like 60 inside that block?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 71
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "211e522f_60887ed0",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 3653
      },
      "writtenOn": "2019-11-25T20:33:15Z",
      "side": 1,
      "message": "I\u0027m not sure that is the right thing to do... I\u0027ll look into it.  I can log an error if ret \u003c 0.",
      "parentUuid": "87480064_276eb131",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 71
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02136ac_303adff1",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T20:42:56Z",
      "side": 1,
      "message": "But isn\u0027t it wrong to update the index counter and map here while ignoring the return value from addDevice()?",
      "parentUuid": "211e522f_60887ed0",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 71
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1adaf451_112f7f30",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 3653
      },
      "writtenOn": "2019-11-25T20:48:39Z",
      "side": 1,
      "message": "only if it\u0027s guaranteed the device index never increments when ret \u003c 0.",
      "parentUuid": "a02136ac_303adff1",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 71
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f96300b_fd5d0ed9",
        "filename": "swig/oc_java/oc/OcPlatform.java",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 21
      },
      "writtenOn": "2019-11-25T21:01:27Z",
      "side": 1,
      "message": "Hmm.. It actually does not increment the device index until the very end of that function in the success path. I think there are 4 spots in core_add_device() where failures are caught, and only the first of those returns a NULL; the other 3 currently \"abort\", which would likely crash the JVM. \n\nI am thinking it may be a better idea to return NULL instead so that addDevice() would gracefully return a \u003c 0 value. So, there is some minor cleanup in order on that front in api/oc_core_res.c.\n\nBut over here, it may be good to settle on that semantic, i.e. do not increment/store anything unless it was a success. What do you think?",
      "parentUuid": "1adaf451_112f7f30",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 71
      },
      "revId": "870f39c6e86e7f2af14e5f4fdc3542130d28d864",
      "serverId": "c6509b8a-a471-4ec1-8e5f-9aed2654acb5",
      "unresolved": true
    }
  ]
}