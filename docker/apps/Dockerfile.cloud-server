FROM alpine:latest AS build
ARG BUILD_TYPE=Release
ARG BUILD_ARGS
RUN apk add --no-cache cmake curl git build-base gcc linux-headers patch perl python3
COPY ./  /iotivity-lite/
RUN cd /iotivity-lite/ && git submodule update --recursive
RUN mkdir /iotivity-lite/build && \
	cd /iotivity-lite/build && \
	cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_TESTING=OFF -DOC_CLOUD_ENABLED=ON ${BUILD_ARGS} .. && \
	cmake --build . --target cloud_server

# install libfaketime
# enable struct stat64 by adding -D__USE_LARGEFILE64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE
RUN git clone https://github.com/wolfcw/libfaketime.git && \
	cd /libfaketime/src && \
	make install FAKETIME_COMPILE_CFLAGS="-DFAKE_SETTIME -DFAKE_STATELESS -D__USE_LARGEFILE64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE"

FROM alpine:latest AS service
RUN apk add --no-cache bash
COPY --from=build /iotivity-lite/build/apps/cloud_server /iotivity-lite/port/linux/service
COPY --from=build /usr/local/lib/faketime/libfaketimeMT.so.1 /usr/local/lib/faketime/libfaketimeMT.so.1
COPY /docker/run.sh /usr/local/bin/run.sh
ENV NUM_DEVICES=1
ENV FAKETIME=
ENV FAKETIME_DONT_FAKE_MONOTONIC=1
ENV FAKETIME_TIMESTAMP_FILE=
ENV FAKETIME_UPDATE_TIMESTAMP_FILE=
ENV FAKETIME_DONT_RESET=
ENV FAKETIME_NO_CACHE=
ENV FAKETIME_CACHE_DURATION=
ENTRYPOINT ["/usr/local/bin/run.sh"]
